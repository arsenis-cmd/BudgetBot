-- BudgetBot PostgreSQL Database Schema

-- Users table
CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    currency VARCHAR(3) DEFAULT 'USD',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Categories table (predefined + custom)
CREATE TABLE categories (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(20) CHECK (type IN ('income', 'expense')),
    color VARCHAR(7), -- hex color code
    icon VARCHAR(50),
    is_custom BOOLEAN DEFAULT false,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Transactions table
CREATE TABLE transactions (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    category_id INTEGER REFERENCES categories(id),
    amount DECIMAL(12, 2) NOT NULL,
    type VARCHAR(20) CHECK (type IN ('income', 'expense')),
    description TEXT,
    transaction_date DATE NOT NULL,
    is_recurring BOOLEAN DEFAULT false,
    recurring_frequency VARCHAR(20), -- 'daily', 'weekly', 'monthly', 'yearly'
    source VARCHAR(50), -- 'manual', 'bank_api', 'csv_import'
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Budget goals table
CREATE TABLE budget_goals (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    category_id INTEGER REFERENCES categories(id),
    amount DECIMAL(12, 2) NOT NULL,
    period VARCHAR(20) DEFAULT 'monthly', -- 'weekly', 'monthly', 'yearly'
    start_date DATE NOT NULL,
    end_date DATE,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Savings goals table
CREATE TABLE savings_goals (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    target_amount DECIMAL(12, 2) NOT NULL,
    current_amount DECIMAL(12, 2) DEFAULT 0,
    target_date DATE,
    status VARCHAR(20) DEFAULT 'active', -- 'active', 'completed', 'cancelled'
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Alerts/Notifications table
CREATE TABLE alerts (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    type VARCHAR(50), -- 'overspending', 'goal_milestone', 'unusual_activity'
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT false,
    severity VARCHAR(20) DEFAULT 'info', -- 'info', 'warning', 'critical'
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ML Predictions cache table
CREATE TABLE ml_predictions (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    prediction_type VARCHAR(50), -- 'expense_forecast', 'budget_suggestion'
    prediction_data JSONB, -- stores the ML model output
    valid_until TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Bank connections (for future API integration)
CREATE TABLE bank_connections (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    bank_name VARCHAR(255),
    account_type VARCHAR(50),
    last_synced TIMESTAMP,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Indexes for performance
CREATE INDEX idx_transactions_user_date ON transactions(user_id, transaction_date DESC);
CREATE INDEX idx_transactions_category ON transactions(category_id);
CREATE INDEX idx_budget_goals_user ON budget_goals(user_id);
CREATE INDEX idx_alerts_user_unread ON alerts(user_id, is_read);

-- Insert default categories
INSERT INTO categories (name, type, color, icon, is_custom) VALUES
('Salary', 'income', '#10B981', 'üí∞', false),
('Freelance', 'income', '#34D399', 'üíº', false),
('Investments', 'income', '#6EE7B7', 'üìà', false),
('Groceries', 'expense', '#EF4444', 'üõí', false),
('Dining', 'expense', '#F97316', 'üçΩÔ∏è', false),
('Transportation', 'expense', '#3B82F6', 'üöó', false),
('Entertainment', 'expense', '#8B5CF6', 'üéÆ', false),
('Healthcare', 'expense', '#EC4899', 'üè•', false),
('Utilities', 'expense', '#F59E0B', '‚ö°', false),
('Rent/Mortgage', 'expense', '#6366F1', 'üè†', false),
('Shopping', 'expense', '#14B8A6', 'üõçÔ∏è', false),
('Education', 'expense', '#06B6D4', 'üìö', false);
